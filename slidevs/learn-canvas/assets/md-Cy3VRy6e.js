import{o as n,c as r,k as i,e,ac as t,q as p,s as u,B as l}from"./modules/vue-B-ZtjMxi.js";import{I as c}from"./slidev/default-B7mrlUNe.js";import{u as d,f as m}from"./slidev/context-CFoHlWp9.js";import"./index-DDwREoBK.js";import"./modules/shiki-CUXul2Oe.js";const O={__name:"05transformations.md__slidev_41",setup(f){const{$slidev:v,$nav:h,$clicksContext:o,$clicks:_,$page:x,$renderContext:C,$frontmatter:s}=d();return o.setup(),(g,a)=>(n(),r(c,p(u(l(m)(l(s),40))),{default:i(()=>a[0]||(a[0]=[e("h2",null,"状态的保存和恢复",-1),e("p",null,[e("code",null,"save()"),t(" 保存画布 (canvas) 的所有状态"),e("br"),e("code",null,"restore()"),t(" 恢复上一个保存的状态"),e("br"),t(" save 和 restore 方法是用来保存和恢复 canvas 状态的，都没有参数。Canvas 的状态就是当前画面应用的所有样式和变形的一个快照。")],-1),e("p",null,"Canvas 状态存储在栈中，每当save()方法被调用后，当前的状态就被推送到栈中保存。一个绘画状态包括：",-1),e("ul",null,[e("li",null,"当前应用的变形（即移动，旋转和缩放）"),e("li",null,"以及下面这些属性：strokeStyle, fillStyle, globalAlpha, lineWidth, lineCap, lineJoin, miterLimit, lineDashOffset, shadowOffsetX, shadowOffsetY, shadowBlur, shadowColor, globalCompositeOperation, font, textAlign, textBaseline, direction, imageSmoothingEnabled"),e("li",null,"当前的裁切路径（clipping path）")],-1),e("p",null,"你可以调用任意多次 save方法。每一次调用 restore 方法，上一个保存的状态就从栈中弹出，所有设定都恢复。",-1)])),_:1},16))}};export{O as default};
