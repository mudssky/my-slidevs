import{_ as v}from"./slidev/VClick-BVArgB0L.js";import{_ as w}from"./CanvasBoard-B-1y74l9.js";import{d as k,t as R,L as $,o as p,c as f,k as a,e as o,ac as e,l as i,q as y,s as B,B as u}from"./modules/vue-B-ZtjMxi.js";import{u as c,f as C}from"./slidev/context-CFoHlWp9.js";import{d as D}from"./examples-G2GKnggk.js";import{_ as L}from"./slidev/Link.vue_vue_type_script_setup_true_lang-BdxIna5_.js";import{I as N}from"./slidev/default-B7mrlUNe.js";import"./index-DDwREoBK.js";import"./modules/shiki-CUXul2Oe.js";import"./slidev/VClicks-CbvQnAAy.js";const P=k({__name:"Demo002Rect1",props:{width:{default:900},height:{default:450}},setup(d){c();const n=d,s=R();return $(()=>{const l=s.value.canvasDom.getContext("2d");D(l)}),(r,l)=>{const m=w;return p(),f(m,{ref_key:"canvasBoardRef",ref:s,width:n.width,height:n.height},null,8,["width","height"])}}}),G={__name:"01shape.md__slidev_10",setup(d){const{$slidev:n,$nav:s,$clicksContext:r,$clicks:l,$page:m,$renderContext:T,$frontmatter:_}=c();return r.setup(),(V,t)=>{const h=L,g=P,x=v;return p(),f(N,y(B(u(C)(u(_),9))),{default:a(()=>[t[7]||(t[7]=o("h3",null,"绘制矩形",-1)),t[8]||(t[8]=o("p",null,"canvas 提供了三个方法绘制矩形：",-1)),o("ol",null,[t[4]||(t[4]=o("li",null,[o("code",null,"fillRect(x, y, width, height)"),e(" 绘制一个填充的矩形")],-1)),t[5]||(t[5]=o("li",null,[o("code",null,"strokeRect(x, y, width, height)"),e(" 绘制一个矩形的边框")],-1)),t[6]||(t[6]=o("li",null,[o("code",null,"clearRect(x, y, width, height)"),e(" 清除指定矩形区域，让清除部分完全透明")],-1)),o("li",null,[t[1]||(t[1]=o("code",null,"rect(x, y, width, height)",-1)),t[2]||(t[2]=e(" 绘制一个左上角坐标为（x,y），宽高为 width 以及 height 的矩形。当该方法执行的时候，moveTo() 方法自动设置坐标参数（0,0）。也就是说，当前笔触自动重置回默认坐标。(这个绘制是添加到")),i(h,{to:"12"},{default:a(()=>t[0]||(t[0]=[e("路径")])),_:1}),t[3]||(t[3]=e("中的)"))])]),i(x,null,{default:a(()=>[i(g,{width:200,height:200})]),_:1})]),_:1},16)}}};export{G as default};
