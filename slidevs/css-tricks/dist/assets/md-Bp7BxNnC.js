import{o as l,b as p,aL as d,c as u,k as m,e as o,l as c,q as x,s as _,B as e}from"./modules/vue-Ba7U_aMa.js";import{_ as f}from"./index-Dgj8W5Xr.js";import{I as v}from"./slidev/default-D2HxYKwE.js";import{u as $,f as b}from"./slidev/context-_iZsAegV.js";import"./modules/shiki-Bpdc4GVC.js";const k={},g={class:"box"};function w(n,s){return l(),p("div",g,s[0]||(s[0]=[d('<p>外 box-shadow 前四个参数：x 偏移值、y 偏移值 、模糊半径、扩张半径。</p><p> 单侧投影的核心是第四个参数：扩张半径。这个参数会根据你指定的值去扩大或缩小投影尺寸，如果我们用一个负的扩张半径，而他的值刚好等于模糊半径，那么投影的尺寸就会与投影所属的元素尺寸完全一致，除非使用偏移量来移动他，否则我们将看不到任何投影。 </p><div class="box-inner"><div class="left">左</div><div class="right">右</div><div class="top">上</div><div class="bottom">下</div></div>',3)]))}const B=f(k,[["render",w]]),z={__name:"005Shadow.md__slidev_61",setup(n){const{$slidev:s,$nav:S,$clicksContext:r,$clicks:C,$page:y,$renderContext:N,$frontmatter:i}=$();return r.setup(),(P,t)=>{const a=B;return l(),u(v,x(_(e(b)(e(i),60))),{default:m(()=>[t[0]||(t[0]=o("h3",null,"单侧阴影",-1)),t[1]||(t[1]=o("p",null,"以 box-shadow: 2px 4px 6px 8px #000 为例，其中的 4 个数值的含义分别是：",-1)),t[2]||(t[2]=o("ol",null,[o("li",null,"x 方向偏移值；"),o("li",null,"y 方向偏移值；"),o("li",null,"阴影的模糊半径；"),o("li",null,"阴影的扩张半径。")],-1)),t[3]||(t[3]=o("p",null,"通过控制阴影扩张半径可以实现单侧阴影效果",-1)),c(a),t[4]||(t[4]=o("p",null,"可以通过clip-path裁剪获得更大的阴影",-1))]),_:1},16)}}};export{z as default};
