import{o as a,c as n,k as c,e as r,q as i,s as p,B as o}from"./modules/vue-Ba7U_aMa.js";import{I as d}from"./slidev/default-D2HxYKwE.js";import{u as l,f as m}from"./slidev/context-_iZsAegV.js";import{_}from"./index-Dgj8W5Xr.js";import"./modules/shiki-Bpdc4GVC.js";const u={__name:"002Backgrounds.md__slidev_24",setup(f){const{$slidev:k,$nav:x,$clicksContext:e,$clicks:g,$page:v,$renderContext:$,$frontmatter:s}=l();return e.setup(),(b,t)=>(a(),n(d,i(p(o(m)(o(s),23))),{default:c(()=>t[0]||(t[0]=[r("h4",null,"通过 transform 模拟渐变动画",-1),r("p",null,"上述两种方式，由于使用了 background-position 和 background-size，并且在渐变中改变这两个属性，导致页面不断地进行大量的重绘（repaint），对页面性能消耗非常严重，所以我们还可以试试 transfrom 的方法。",-1),r("p",null,"下面这种方式，使用伪元素配合 transform 进行渐变动画，通过元素的伪元素 before 或者 after ，在元素内部画出一个大背景，再通过 transform 对伪元素进行变换： 也就是矩形内的背景在位移。",-1),r("div",{class:"gradient-box3"},null,-1)])),_:1},16))}},h=_(u,[["__scopeId","data-v-c11b155b"]]);export{h as default};
