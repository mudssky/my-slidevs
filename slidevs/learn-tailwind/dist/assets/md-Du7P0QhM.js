import{o as a,b as u,ac as s,e,d as f,f as c,i as o,c as h,k as p,l as y,q as g,s as k,B as d}from"./modules/vue-DOdqBpuR.js";import{_ as b}from"./index-7cAGclK2.js";import{u as x,f as w}from"./slidev/context-dwpNuGMI.js";import"./modules/shiki-C5DiUTAk.js";const v={},$={class:"w-[200px]"};function C(l,t){return a(),u("div",$,t[0]||(t[0]=[s(" When controlling the flow of text, using the CSS property "),e("span",{class:"inline"},"display: inline",-1),s(" will cause the text inside the element to wrap normally. While using the property "),e("span",{class:"inline-block"},"display: inline-block",-1),s(" will wrap the element to prevent the text inside from extending beyond its parent. Lastly, using the property "),e("span",{class:"block"},"display: block",-1),s(" will put the element on its own line and fill its parent. ")]))}const S=b(v,[["render",C],["__scopeId","data-v-bc79bbea"]]),B=f({__name:"two-cols",props:{class:{type:String},layoutClass:{type:String}},setup(l){const t=l;return(n,i)=>(a(),u("div",{class:o(["slidev-layout two-columns w-full h-full grid grid-cols-2",t.layoutClass])},[e("div",{class:o(["col-left",t.class])},[c(n.$slots,"default")],2),e("div",{class:o(["col-right",t.class])},[c(n.$slots,"right")],2)],2))}}),I={__name:"001layout.md__slidev_14",setup(l){const{$slidev:t,$nav:n,$clicksContext:i,$clicks:P,$page:N,$renderContext:V,$frontmatter:_}=x();return i.setup(),(z,r)=>{const m=S;return a(),h(B,g(k(d(w)(d(_),13))),{right:p(D=>[y(m)]),default:p(()=>[r[0]||(r[0]=e("p",null,[e("code",null,"inline"),s(" 、 "),e("code",null,"inline-block"),s(" 和 "),e("code",null,"block"),s(" 行内元素，行内块元素，块元素，是比较的常用的 这个例子就能明显看出区别，inline文字会正常换行 inline-block则是整体包裹住文字 block元素会独占一行")],-1))]),_:1},16)}}};export{I as default};
