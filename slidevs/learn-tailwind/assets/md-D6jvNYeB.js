import{o as t,c as i,k as p,e as l,ac as n,q as r,s as c,B as e}from"./modules/vue-DOdqBpuR.js";import{I as d}from"./slidev/default-CDE6s50l.js";import{u,f}from"./slidev/context-dwpNuGMI.js";import{_}from"./index-7cAGclK2.js";import"./modules/shiki-C5DiUTAk.js";const x={__name:"001layout.md__slidev_16",setup(m){const{$slidev:v,$nav:g,$clicksContext:a,$clicks:$,$page:k,$renderContext:y,$frontmatter:o}=u();return a.setup(),(B,s)=>(t(),i(d,r(c(e(f)(e(o),15))),{default:p(()=>s[0]||(s[0]=[l("p",null,[n("flex 就不用在这里多说了 "),l("code",null,"inline-flex"),n(" 创建一个随文本流动的内联flex容器")],-1),l("p",null,"似乎是和inline-box类似，会根据内容决定容器大小。。。 因为没有碰到使用场景，所以demo略了",-1),l("p",null,"grid也略",-1),l("p",null,"inline-grid， 和inline-flex类似，不会占据一整行，根据内容决定容器大小",-1),l("span",{class:"inline-grid grid-cols-3 gap-4"},[l("span",null,"01"),l("span",null,"02"),l("span",null,"03"),l("span",null,"04"),l("span",null,"05"),l("span",null,"06")],-1),l("span",{class:"inline-grid grid-cols-3 gap-4"},[l("span",null,"01"),l("span",null,"02"),l("span",null,"03"),l("span",null,"04"),l("span",null,"05"),l("span",null,"06")],-1),l("p",null,[l("code",null,"contents"),n(", 这个可以创建一个虚拟容器，他本身会隐藏，不会被渲染。但是子级内容不会受到影响(就类似于display:none.但是子级不隐藏)")],-1),l("div",{class:"flex box-container"},[l("div",{class:"flex-1"},"01"),l("div",{class:"contents bg-red-200"},[l("div",{class:"flex-1"},"02"),l("div",{class:"flex-1"},"03")]),l("div",{class:"flex-1"},"04")],-1)])),_:1},16))}},T=_(x,[["__scopeId","data-v-387381f0"]]);export{T as default};
